services:
  web:
    # Сборка на основе Dockerfile
    build: .
    # Перед запуском приложения выполняются миграции БД
    command: sh -c 'alembic upgrade head && fastapi run app/main.py --port 81 --workers 4'
    volumes:
      - .:/app
    ports:
      - "81:81"
    env_file: ".env"
    # Контейнеры приложения и СУБД будут в одной сети
    networks:
      - booking-network
    # Контейнер приложения запускается после проверки работоспособности СУБД
    depends_on:
      db:
        condition: service_healthy

  db:
    image: postgres:12.5
    # Проверка работоспособности СУБД
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
    # Том для сохранения данных после завершения работы контейнера
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./postgres.env
    ports:
      - "5432:5432"
    networks:
      - booking-network

  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4:6.8
    environment:
      PGADMIN_DEFAULT_EMAIL: "postgres@mail.ru"
      PGADMIN_DEFAULT_PASSWORD: "secret"
      PGADMIN_CONFIG_SERVER_MODE: "False"
    volumes:
      - pg_admin:/var/lib/pgadmin
    ports:
      - "5050:80"
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1G
    networks:
      - booking-network

networks:
      booking-network:
        driver: bridge

volumes:
  postgres_data:
  pg_admin: